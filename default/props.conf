[source::udp:514]
TRUNCATE = 10000
TRANSFORMS-dns = remove_dns_query,remove_dns_answer
TRANSFORMS-force_mikrotik = force_mikrotik_st,force_mikrotik_ix

[syslog]
TRUNCATE = 10000
TRANSFORMS-dns = remove_dns_query,remove_dns_answer
TRANSFORMS-force_mikrotik = force_mikrotik_st,force_mikrotik_ix

[rsyslog]
TRUNCATE = 10000
TRANSFORMS-dns = remove_dns_query,remove_dns_answer
TRANSFORMS-force_mikrotik = force_mikrotik_st,force_mikrotik_ix
SEDCMD-clean_header = s/\d{4}-\d\d-\d\d.*?<\d+>//
SEDCMD-clean_end = s/#015$//

[routeros]
MAX_TIMESTAMP_LOOKAHEAD = 23
SHOULD_LINEMERGE = false
DATETIME_CONFIG = CURRENT


EXTRACT-mikrotik_bridge = bridge,stp (?:\w+:\s)?(?<int>\S+)\s(?<status>\w+)

EXTRACT-mikrotik_caps-man1 = script=caps-man name=(?<ap>.*?) counter=(?<counter>\d+)
EXTRACT-mikrotik_caps-man2 = caps,(?:info|debug).*?(?<mac>(?:\w\w:){5}\w\w)@(?<ap>.*?) (?:(?:dis)?connected|rejected), (?<reason>.*?)(?:\(\d+\)| (?<strength>-\d+))?$
EXTRACT-mikrotik_caps-man_frequency = (?:caps|script),(?:info|debug).*?: (?<ap>[^:]+): selected channel (?<frequency>\d+)\/(?<width>\d+)-?(?<extensionChannel>[a-zA-Z]+)?\/(?<standard>[a-zA-Z]{2})[^\d]*(?<dBm>\d+)dBm

EXTRACT-mikrotik_dhcp_vlan = dhcp,debug.*: (?<dhcp_server>.*?) received request

EXTRACT-mikrotik_dns_src = dns,packet.*from\s(?<src_ip>[^:]+):(?<src_port>\d+)
EXTRACT-mikrotik_dns_site = dns,packet.*question:\s(?<site1>[^:]+):(?<site_type>[^:]+):(?<site_direction>[^:]+)
EXTRACT-mikrotik_dns_record_1 = dns.*query from\s(?<src_ip>[^:]+):\s#(?<ses_id>\d+)\s(?<site>\S+)\.\s(?<record_type>\S+)
EXTRACT-mikrotik_dns_record_2 = dns,packet.*\s<(?<site2>[^:]+):(?<record_type>[^:]+):(?<record_id>[^=]+)=(?<record_info>[^>]+)
EXTRACT-mikrotik_dns_record_3 = dns.* done query:\s#(?<ses_id>\d+)\s(?<site>\S+)\s(?<dest_ip>\S+)

EXTRACT-mikrotik_firewall_info1 = (?n)firewall,info\s[Mm]ikro[Tt]ik:\s((?<rule>\S+)\s)?(?<chain>.+?):\sin:(?<in_if>.*?)\sout:(?<out_if>[^,]+),(\spacket-mark:(?<packet_mark>\S+))?(\sconnection-mark:(?<connection_mark>\S+))?(\sconnection-state:(?<connection_state>\S+))?(\ssrc-mac\s(?<src_mac>[^,]+),)?\sproto\s(?<protocol>\S+)(\s\((?<flag>[^\)]*)\))?,\s\[?(?<src_ip>(?:\d+\.\d+\.\d+\.\d+|[^\]]+))\]?(:(?<src_port>[^-]+))?->\[?(?<dest_ip>(?:\d+\.\d+\.\d+\.\d+|[^\]]+))(\]?:(?<dest_port>[^,]+))?,\s(?:NAT[^,]+, )?(prio\s(?<prio>[^,]+),\s)?len\s(?<length>\d+)

EXTRACT-mikrotik_hotspot_user_scrip_mac = hotspot[^:]+:\s(?<user>\S+)\s\(?:(?:(?<src_ip>\d+\.\d+\.\d+\.\d+)|(?<mac>(?:..:){5}..))\)
EXTRACT-mikrotik_hotspot_user_login_type = hotspot.*trying to log in by (?<log_in_by>\S+)

EXTRACT-mikrotik_interface = interface,info.*? (?<int>\S+) link (?<change>\S+)(?: \(speed (?<speed>[^,]+), (?<duplex>\S+) duplex)?

EXTRACT-mikrotik_ip_accounting = ^\d+\s+(?<src_ip>\d+\.\d+\.\d+\.\d+)\s+(?<dest_ip>\d+\.\d+\.\d+\.\d+)\s+(?<packet>\d+)\s+(?<byte>\d+)(?:\s+(?<src_user>\S+)\s+(?<dest_user>\S+))?

EXTRACT-mikrotik_ipsec_ip_1 = ipsec,error.*? (?<src_ip>\d+\.\d+\.\d+\.\d+) (?:failed to|parsing|phase1)
EXTRACT-mikrotik_ipsec_ip_2 = Invalid exchange type \d+ from\s(?<src_ip>[^[]+)
EXTRACT-mikrotik_ipsec_ip_3 = ipsec.*? not registered for (?<src_ip>[^[]+)
EXTRACT-mikrotik_ipsec_ip_4 = ipsec,error.*? phase1 negotiation failed.*?(?<dest_ip>\d+\.\d+\.\d+\.\d+).*?>(?<src_ip>\d+\.\d+\.\d+\.\d+)

EXTRACT-mikrotik_l2tp_src_ip = first L2TP UDP packet received from\s(?<src_ip>\S+)
EXTRACT-mikrotik_l2tp_user1 = l2tp,ppp,info.*? (?<user>\S+) logged
EXTRACT-mikrotik_l2tp_user2 = l2tp,ppp,info.*? <l2tp-(?<user>[^>]+)>:\s

EXTRACT-mikrotik_modul_status = ^(?:.*?<\d+>)?(?<module>[^\s,]+),?(?<info1>.*?)(?:,(?<severity>(?:debug|info|warning|error|critical)))?(?:,(?<info2>(?:packet|account|state|calc|event)))?\s

EXTRACT-mikrotik_pppoe = pppoe.*?(?<user>\S+) logged (?<logged>[^,]+), (?<src_ip>\d+\.\d+\.\d+\.\d+)?(?:(?<time>\d+) (?<rcv_bytes>\d+) (?<sent_bytes>\d+) (?<rcv_packets>\d+) (?<sent_packet>\d+))?

EXTRACT-mikrotik_pptp_src_ip = TCP connection established from\s(?<src_ip>\S+)

EXTRACT-mikrotik_session = (?<user>\S+)\slogged out, (?<seconds>\d+) (?<bytes_in>\d+) (?<bytes_out>\d+) (?<packets_in>\d+) (?<packets_out>\d+)

EXTRACT-mikrotik_ssh_user = ssh,debug .*(?:user|auth req):\s(?<user>\S+)\s

EXTRACT-mikrotik_system_action = system,info .*:\s(?<change>.*)\s(?<action>[\S]+)\sby\s(?<user>\S+)
EXTRACT-mikrotik_system_info = system,info,account .*user\s(?<user>\S+)\slogged in from\s(?<user_ip>\S+)\svia\s(?<system>\S+)

EXTRACT-mikrotik_upnp_service = script,info .*nextid.*: (?<service>[^;]+);

EXTRACT-mikrotik_user_logged_in_1 = (?<user>\S+)\slogged (?:in(?:,| )|out (?:from)?)(?: (?<user_ip>\S+))?(?:\s?via\s(?<system>\S+))?
EXTRACT-mikrotik_user_logged_in_2 = login failure for user\s(?<user>\S+)\sfrom\s(?<user_ip>\S+)(?:\svia\s(?<system>\S+))?
EXTRACT-mikrotik_user_logged_in_3 = user\s(?<user>\S+)\sauthentication

EXTRACT-mikrotik_web-proxy = web-proxy,account\s\S+\s(?<src_ip>\d+\.\d+\.\d+\.\d+)\s(?<status>\w+)(?:\s(?<id>\d+))?\s(?<url>\S+)

EXTRACT-mikrotik_wireless_1 = wireless,info (?:\w+:\s)?(?<mac>\w\w:\w\w:\w\w:\w\w:\w\w:\w\w)@(?<int>[^:]+):\s(?<status>\w+)(?:, signal strength\s(?<strength>\S+))?
EXTRACT-mikrotik_wireless_strenght = signal-strength=(?<signal_strength>-\d+).*tx-rate=(?<tx_rate>[\d.]+)

EXTRACT-mikrotik_wireguard_error = wireguard,debug\s\S+\s(?<interface>\S+)\s(?<public_key>\S+)\s(?<error>.*?)\s\(


EVAL-channel = (frequency-if(match(standard,"a"),5000,2407))/5
EVAL-src_port = if(isnull(src_port) AND module=="firewall","na",src_port)
EVAL-src_mac = if(isnull(src_mac) AND module=="firewall","na",src_mac)
EVAL-dest_port = if(isnull(dest_port) AND module=="firewall","na",dest_port)
EVAL-rule = case(isnull(rule) AND module=="firewall","missing_or_too_long_Prefix_max_20_characters",len(rule)>20 AND module=="firewall","too_long_Prefix_max_20_characters",1=1,rule)

LOOKUP-automatic_device_table = device_table host

LOOKUP-automatic_dhcp_table = dhcp_table mac OUTPUTNEW

