[source::udp:514]
TRUNCATE = 10000
TRANSFORMS-force_mikrotik = force_mikrotik_st,force_mikrotik_ix

[syslog]
TRUNCATE = 10000
TRANSFORMS-force_mikrotik = force_mikrotik_st,force_mikrotik_ix

[rsyslog]
TRUNCATE = 10000
TRANSFORMS-force_mikrotik = force_mikrotik_st,force_mikrotik_ix
SEDCMD-clean_header = s/\d{4}-\d\d-\d\d.*?<\d+>//
SEDCMD-clean_end = s/#015$//

[mikrotik]
MAX_TIMESTAMP_LOOKAHEAD = 23
SHOULD_LINEMERGE = false
DATETIME_CONFIG = CURRENT

# Automatic excract data at search time
EXTRACT-mikrotik_bridge = bridge,stp .*?:\s(?<int>\S+)\s(?<status>.*)

EXTRACT-mikrotik_caps_man1 = script=caps-man name=(?<ap>.*?) counter=(?<counter>\d+)
EXTRACT-mikrotik_caps_man2 = caps,(?:info|debug).*?(?<mac>(?:\w\w:){5}\w\w)@(?<ap>.*?) (?:(?:dis)?connected|rejected), (?<reason>.*?)(?:\(\d+\)| (?<strength>-\d+))?$
EXTRACT-mikrotik_caps_man_frequency = (?:caps|script),(?:info|debug).*?: (?<ap>[^:]+): selected channel (?<frequency>\d+)\/(?<width>\d+)-?(?<extensionChannel>[a-zA-Z]+)?\/(?<standard>[a-zA-Z]{2})[^\d]*(?<dBm>\d+)dBm

EXTRACT-mikrotik_dhcp_vlan = dhcp,debug[^:]+: (?<dhcp_server>.*?) received request

EXTRACT-mikrotik_dns_src = dns,packet.*from\s(?<src_ip>[^:]+):(?<src_port>\d+)
EXTRACT-mikrotik_dns_site = dns,packet.*?question:\s(?<site1>[^:]+):(?<site_type>[^:]+):(?<site_direction>[^:]+)
EXTRACT-mikrotik_dns_record_1 = dns.*?query from\s(?<src_ip>[^:]+):\s#(?<ses_id>\d+)\s(?<site>\S+)\.\s(?<record_type>\S+)
EXTRACT-mikrotik_dns_record_2 = dns,packet.*?\s<(?<site2>[^:]+):(?<record_type>[^:]+):(?<record_id>[^=]+)=(?<record_info>[^>]+)
EXTRACT-mikrotik_dns_record_3 = dns.*?done query:\s#(?<ses_id>\d+)\s(?<site>\S+)\s(?<dest_ip>\S+)

EXTRACT-mikrotik_firewall_info1 = (?n)firewall,info[^:]+:\s((?<rule>\S+)\s)?(?<chain>.+?):\sin:(?<in_if>.*?)\sout:(?<out_if>[^,]+),(\spacket-mark:(?<packet_mark>\S+))?(\sconnection-mark:(?<connection_mark>\S+))?(\sconnection-state:(?<connection_state>\S+))?(\ssrc-mac\s(?<src_mac>[^,]+),)?\sproto\s(?<protocol>\S+)(\s\((?<flag>[^\)]*)\))?,\s\[?(?<src_ip>(?:\d+\.\d+\.\d+\.\d+|[^\]]+))\]?(:(?<src_port>[^-]+))?->\[?(?<dest_ip>(?:\d+\.\d+\.\d+\.\d+|[^\]]+))(\]?:(?<dest_port>[^,]+))?,\s(?:NAT[^,]+, )?(prio\s(?<prio>[^,]+),\s)?len\s(?<length>\d+)

EXTRACT-mikrotik_hotspot_user_scrip_mac = hotspot[^:]+:\s(?<user>\S+)\s\(?:(?:(?<src_ip>\d+\.\d+\.\d+\.\d+)|(?<mac>(?:..:){5}..))\)
EXTRACT-mikrotik_hotspot_user_login_type = hotspot.*trying to log in by (?<log_in_by>\S+)

EXTRACT-mikrotik_interface = interface,info[^:]+:\s(?<int>\S+) link (?<change>\S+)(?: \(speed (?<speed>[^,]+), (?<duplex>\S+) duplex)?

EXTRACT-mikrotik_ipsec_ip_1 = ipsec,error[^:]+: (?<src_ip>\d+\.\d+\.\d+\.\d+) (?<error>failed to[^\(\.]+|parsing|phase1.*)
EXTRACT-mikrotik_ipsec_ip_2 = (?<error>Invalid exchange type) \d+ from\s(?<src_ip>[^[]+)
EXTRACT-mikrotik_ipsec_ip_3 = ipsec.*? (?<error>not registered for) (?<src_ip>[^[]+)
EXTRACT-mikrotik_ipsec_ip_4 = ipsec,error[^:]+: (?<error>phase1 negotiation failed due to time up).*?(?<dest_ip>\d+\.\d+\.\d+\.\d+).*?>(?<src_ip>\d+\.\d+\.\d+\.\d+)
EXTRACT-mikrotik_ipsec_ip_5 = ipsec,error[^:]+: (?<error>no suitable proposal found)
EXTRACT-mikrotik_ipsec_ip_6 = ipsec,error[^:]+: (?<error>initiator can't find identity for peer)

EXTRACT-mikrotik_l2tp_src_ip = first L2TP UDP packet received from\s(?<src_ip>\S+)
EXTRACT-mikrotik_l2tp_user1 = l2tp,ppp,info[^:]+: (?<user>\S+) logged
EXTRACT-mikrotik_l2tp_user2 = l2tp,ppp,info[^:]+: <l2tp-(?<user>[^>]+)>:\s

EXTRACT-mikrotik_modul_status = ^(?:.*?<\d+>)?(?<module>[^\s,]+),?(?<info1>.*?)(?:,(?<severity>(?:debug|info|warning|error|critical)))?(?:,(?<info2>(?:packet|account|state|calc|event)))?\s

EXTRACT-mikrotik_pppoe = pppoe.*?(?<user>\S+) logged (?<logged>[^,]+), (?<src_ip>\d+\.\d+\.\d+\.\d+)?(?:(?<time>\d+) (?<rcv_bytes>\d+) (?<sent_bytes>\d+) (?<rcv_packets>\d+) (?<sent_packet>\d+))?

EXTRACT-mikrotik_pptp_src_ip = TCP connection established from\s(?<src_ip>\S+)

EXTRACT-mikrotik_serial = (?i)\sserial=(?<serial>\w+)\sMikro

EXTRACT-mikrotik_ssh_user = ssh,debug .*(?:user|auth req):\s(?<user>\S+)\s

EXTRACT-mikrotik_system_action = system,info [^:]+:\s(?<change>.*?)\s(?<action>[\S]+)\sby\s(?<type>[^:]+):(?<user>[^\s\/]+)

EXTRACT-mikrotik_system_board_info = script=sysinfo version=\"(?<version>[^\"]*)\" board-name=\"(?<board_name>[^\"]*)\" model=\"(?<model>[^\"]*)\" (serial=(?<serial>\S*) )?identity=\"(?<identity>[^\"]*)\" factory-firmware=\"(?<factory_firmware>[^\"]*)\" current-firmware=\"(?<current_firmware>[^\"]*)\" upgrade-firmware=\"(?<upgrade_firmware>[^\"]*)\"

EXTRACT-mikrotik_system_info = system,info,account[^:]+:\suser\s(?<user>\S+)\slogged in from\s(?<user_ip>\S+)\svia\s(?<system>\S+)

EXTRACT-mikrotik_upnp_service = script,info[^:]+:\s\.nextid[^:]+:\s(?<service>[^;]+);

EXTRACT-mikrotik_user_logged_in_1 = (?<user>\S+)\slogged (?:in(?:,| )|out (?:from)?)(?: (?<user_ip>\S+))?(?:\s?via\s(?<system>\S+))?
EXTRACT-mikrotik_user_logged_in_2 = login failure for user\s(?<user>\S+)\sfrom\s(?<user_ip>\S+)(?:\s(?:via|to)\s(?<system>\S+))?
EXTRACT-mikrotik_user_logged_in_3 = user\s(?<user>\S+)\sauthentication

EXTRACT-mikrotik_vpn_session_logged_out = (?<user>\S+)\slogged out, (?<seconds>\d+) (?<bytes_in>\d+) (?<bytes_out>\d+) (?<packets_in>\d+) (?<packets_out>\d+)

EXTRACT-mikrotik_web_proxy = web-proxy,account\s\S+\s(?<src_ip>\d+\.\d+\.\d+\.\d+)\s(?<status>\w+)(?:\s(?<id>\d+))?\s(?<url>\S+)

EXTRACT-mikrotik_wireless = wireless,info[^:]+:\s(?<mac>[^@]+)@(?<int>[^:]+):\s(?<status>[^,]+)(?:,\s(?<disconnected>[^,]+))?,\ssignal strength (?<strength>\S+)
EXTRACT-mikrotik_wireless_strenght = signal-strength=(?<signal_strength>-\d+)[^=]+tx-rate=(?<tx_rate>[\d.]+)

EXTRACT-mikrotik_wireguard_error = wireguard,debug[^:]+:\s(?<interface>\S+)\s(?<public_key>\S{20,})\s(?<error>.+)

# Automatic do som eval at search time
EVAL-channel = (frequency-if(match(standard,"a"),5000,2407))/5
EVAL-src_port = if(isnull(src_port) AND module=="firewall","na",src_port)
EVAL-src_mac = if(isnull(src_mac) AND module=="firewall","na",src_mac)
EVAL-dest_port = if(isnull(dest_port) AND module=="firewall","na",dest_port)
EVAL-rule = case(isnull(rule) AND module=="firewall","missing_or_too_long_Prefix_max_20_characters",len(rule)>20 AND module=="firewall","too_long_Prefix_max_20_characters",1=1,rule)

# Lookups.  Used to extract data automatically
LOOKUP-automatic_device_table = device_table serial OUTPUTNEW board_name identity model version
LOOKUP-automatic_dhcp_table = dhcp_table mac OUTPUTNEW
